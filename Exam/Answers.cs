using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Exam
{
    class Answers
    {
        /* 
          1.Если использовать вроде метод String.Replace() можно изменить строку
          
          -----------------------------------------------------------------------------------------------------------
          
          2.Рефлексия дает информацию действующему коду о нем же. То есть о событиях, свойствах, методах и тд.
          
        -----------------------------------------------------------------------------------------------------------

          3. Сериализация это когда какой-то поток данных преобразуется в определенный поток байтов.
           XmlSerializer xmlSerializer = new XmlSerializer(typeof(Product));
             BinaryFormater serializer = new BinaryFormater();
             using (var stream = File.Open(@"Z:\zapis\zapisposhla.", FileMode.Truncate))
             {
                 var product = new Product
                 {
                     Id = 1,
                     ProductName = "Car",
                     ProductCount = 15,
                     ProductPrice = "15 mln.tenge"
                 };
                  xmlSerializer.Serialize(stream, product);

        -----------------------------------------------------------------------------------------------------------

        4. interface IAnswer<T> where T: IDisposable
        {
        }

        -----------------------------------------------------------------------------------------------------------

        5. Плюс интерфэйса в том, что можно не вводить в похожих по данным классах одно и то же. Как в примере с учителем и учеником, чтоб в каждом классе не вводить
        их имя, фамилию и тд. Можно создать класс, где мы все это опишем и все. 
        И вроде между абстрактным классом и интерфейсом нет никакой разницы. Разве, что в абстрактных классах везде пишется слово abstract и интерфейсы более гибкие и как мне выглядят красивее

        -----------------------------------------------------------------------------------------------------------

        6. В основном значение nullable могут принимать только ссылочные типы и также null указывает на то что наше значение неизвестно.
        Точно не знаю, но вроде в основном используется для работы с базой данных.
        
        -----------------------------------------------------------------------------------------------------------
        
       


        */
    }
}
